// <auto-generated />
using System;
using Ken_test.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Ken_test.Migrations
{
    [DbContext(typeof(Ken_testContext))]
    [Migration("20201203064141_add_table_MusicFile")]
    partial class add_table_MusicFile
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Ken_test.Models.MessageLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("DateTime");

                    b.Property<DateTime?>("EditTime")
                        .HasColumnType("DateTime");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<string>("MsgContext")
                        .HasMaxLength(500);

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("message_log");
                });

            modelBuilder.Entity("Ken_test.Models.Music", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CoverImgUrl")
                        .HasMaxLength(500);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("DateTime");

                    b.Property<DateTime?>("EditTime")
                        .HasColumnType("DateTime");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<int>("MusicFileId");

                    b.Property<int>("Sort");

                    b.Property<string>("Title")
                        .HasMaxLength(100);

                    b.Property<string>("Url")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("MusicFileId");

                    b.ToTable("ken_music");
                });

            modelBuilder.Entity("Ken_test.Models.MusicFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Count");

                    b.Property<string>("CoverUrl")
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("DateTime");

                    b.Property<DateTime?>("EditTime")
                        .HasColumnType("DateTime");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("ken_music_file");
                });

            modelBuilder.Entity("Ken_test.Models.UserInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("DateTime");

                    b.Property<DateTime?>("EditTime")
                        .HasColumnType("DateTime");

                    b.Property<string>("HeadPicture")
                        .HasMaxLength(50);

                    b.Property<string>("IPAddress")
                        .HasMaxLength(50);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<string>("NickName")
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .HasMaxLength(50);

                    b.Property<string>("RealName")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("user_info");
                });

            modelBuilder.Entity("Ken_test.Models.MessageLog", b =>
                {
                    b.HasOne("Ken_test.Models.UserInfo", "UserInfo")
                        .WithMany("MessageLogs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Ken_test.Models.Music", b =>
                {
                    b.HasOne("Ken_test.Models.MusicFile", "MusicFile")
                        .WithMany("Musics")
                        .HasForeignKey("MusicFileId")
                        .OnDelete(DeleteBehavior.SetNull);
                });
#pragma warning restore 612, 618
        }
    }
}
